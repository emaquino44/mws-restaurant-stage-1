class DBHelper{static get DATABASE_URL(){return"http://localhost:1337"}static setIndexedDB(){return idb.open("restaurants",1,e=>{if(e.objectStoreNames.contains("restaurants")||e.createObjectStore("restaurants",{keyPath:"id"}),!e.objectStoreNames.contains("reviews")){const t=e.createObjectStore("reviews",{keyPath:"id"});t.createIndex("byRestaurant","restaurant_id",{unique:!1}),t.createIndex("byAuthorName","name",{unique:!1})}})}static getAllCachedRestaurants(){return DBHelper.setIndexedDB().then(e=>{if(!e)return;return e.transaction("restaurants").objectStore("restaurants").getAll()})}static getCachedRestaurant(e){return DBHelper.setIndexedDB().then(t=>{if(!t)return;return t.transaction("restaurants").objectStore("restaurants").get(Number(e))})}static getCachedRestaurantReviews(e){return DBHelper.setIndexedDB().then(t=>{if(!t)return;return t.transaction("reviews").objectStore("reviews").index("byRestaurant").get(e)})}static fetchRestaurants(e){DBHelper.getAllCachedRestaurants().then(t=>{if(t.length>0)return e(null,t);fetch(`${DBHelper.DATABASE_URL}/restaurants`).then(e=>e.json()).then(t=>{DBHelper.setIndexedDB().then(r=>{if(!r)return e(null,t);let n=r.transaction("restaurants","readwrite").objectStore("restaurants");t.forEach(e=>n.put(e))}),e(null,t)}).catch(t=>e(t,null))})}static fetchRestaurantById(e,t){DBHelper.getCachedRestaurant(e).then(r=>{if(r)return t(null,r);fetch(`${DBHelper.DATABASE_URL}/restaurants/${e}`).then(e=>e.json()).then(e=>{DBHelper.setIndexedDB().then(r=>{if(!r)return t(null,e);r.transaction("restaurants","readwrite").objectStore("restaurants").put(e)}),t(null,e)}).catch(e=>t(e,null))})}static fetchAllRestaurantReviews(e,t){DBHelper.getCachedRestaurantReviews(e).then(r=>{if(r>0)return t(null,r);fetch(`${DBHelper.DATABASE_URL}/reviews/?restaurant_id=${e}`).then(e=>e.json()).then(e=>{DBHelper.setIndexedDB().then(r=>{if(!r)return t(null,e);let n=r.transaction("reviews","readwrite").objectStore("reviews");e.forEach(e=>n.put(e))}),t(null,e)}).catch(e=>t(e,null))})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.cuisine_type==e);t(null,r)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.neighborhood==e);t(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,r){DBHelper.fetchRestaurants((n,a)=>{if(n)r(n,null);else{let n=a;"all"!=e&&(n=n.filter(t=>t.cuisine_type==e)),"all"!=t&&(n=n.filter(e=>e.neighborhood==t)),r(null,n)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].neighborhood),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].cuisine_type),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}.jpg`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}